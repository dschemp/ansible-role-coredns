---
- include_tasks: preflight.yml

- name: Create user and group
  ansible.builtin.user:
    name: "{{ coredns_install_account }}"
    home: /var/lib/coredns
    shell: /usr/sbin/nologin
    system: true

- name: Ensure zones folder is empty
  ansible.builtin.file:
    path: "{{ (coredns_install_path, 'zones') | path_join }}"
    state: absent

- name: Create folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ coredns_install_account }}"
    group: "{{ coredns_install_account }}"
  with_items:
    - "{{ coredns_install_path }}"
    - "{{ (coredns_install_path, 'zones') | path_join }}"

- name: "Install CoreDNS {{ coredns_version }}"
  ansible.builtin.unarchive:
    src: "https://github.com/coredns/coredns/releases/download/v{{ coredns_version }}/coredns_{{ coredns_version }}_linux_amd64.tgz"
    dest: "{{ coredns_install_path }}"
    remote_src: true
    owner: "{{ coredns_install_account }}"
    group: "{{ coredns_install_account }}"
    creates: "{{ (coredns_install_path, 'coredns') | path_join }}"

- name: Copy Corefile
  ansible.builtin.template:
    src: Corefile.j2
    dest: "{{ (coredns_install_path, 'Corefile') | path_join }}"
    owner: "{{ coredns_install_account }}"
    group: "{{ coredns_install_account }}"

- name: "Copy default zone {{ coredns_default_zone_domain }}"
  ansible.builtin.template:
    src: default.zone.j2
    dest: "{{ (coredns_install_path, 'zones', coredns_default_zone_domain + '.zone') | path_join }}"
  when: coredns_default_zone_create | bool and coredns_default_zone_domain | length > 0

- include_tasks: configure.yml
